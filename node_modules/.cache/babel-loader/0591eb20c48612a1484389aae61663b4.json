{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT JS\\\\React Upforce\\\\daily-todo-fb-final\\\\src\\\\shared\\\\DrawerContent\\\\DrawerContent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Divider from '@material-ui/core/Divider';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport TodayIcon from '@material-ui/icons/Today';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport SettingsTwoToneIcon from '@material-ui/icons/SettingsTwoTone';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\nimport { noop, formatedDate } from '../../utils';\nimport '../../assets/styles/0-modules/shared/Drawer/drawer.css';\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    minHeight: 52,\n    padding: '0 10px',\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    color: red[500]\n  },\n  dateGridOne: {\n    display: 'grid',\n    gridTemplateColumns: '50px 130px'\n  },\n  dateDigit: {\n    textAlign: 'center'\n  },\n  settingsContainer: {\n    borderLeft: '1px solid rgba(0, 0, 0, 0.12)'\n  },\n  settingButton: {\n    backgroundColor: 'transparent !important'\n  },\n  dateGridTwo: {\n    paddingTop: '0.4rem',\n    fontSize: '1rem'\n  },\n  moment: {\n    fontSize: '2.5rem'\n  },\n  button: {\n    color: '#3f51b5',\n    textDecoration: 'none',\n    padding: theme.spacing(1),\n    borderRadius: '5px'\n  },\n  inline: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  listItemDatePicker: {\n    padding: 0,\n    margin: 0,\n    zoom: 0.8\n  },\n  nextPrevButtons: {\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nfunction DrawerContent({\n  settingsButtonHandler,\n  logoutButtonHandler,\n  handleDateChange,\n  goToTodayDateHandler,\n  prevButtonHandler,\n  nextButtonHandler,\n  date\n}) {\n  const uid = localStorage.getItem('uid');\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.dateGridOne,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.dateDigit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Moment, {\n    format: \"D\",\n    className: classes.moment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, date || new Date())), React.createElement(\"div\", {\n    className: classes.dateGridTwo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Moment, {\n    format: \"dddd\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, date || new Date())), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Moment, {\n    format: \"MMMM, YYYY\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, date || new Date())))), React.createElement(\"div\", {\n    className: classes.settingsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    type: \"button\",\n    onClick: settingsButtonHandler,\n    className: classes.settingButton,\n    \"aria-label\": \"settings\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(SettingsTwoToneIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), uid !== '' && uid !== null && uid !== undefined && React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    onClick: logoutButtonHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(ExitToAppIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: \"LOGOUT\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    className: classes.listItemDatePicker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    className: classes.muiPickerUtilsContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    variant: \"static\",\n    format: \"MM/dd/yyyy\",\n    margin: \"normal\",\n    id: \"date-picker-inline\",\n    label: \"Date picker inline\",\n    value: date,\n    maxDate: new Date(),\n    onChange: handleDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(List, {\n    className: classes.nextPrevButtons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    size: \"small\",\n    variant: \"extended\",\n    color: \"primary\",\n    \"aria-label\": \"prev\",\n    className: classes.margin,\n    onClick: prevButtonHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(ChevronLeftIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), \"Prev\"), React.createElement(Fab, {\n    size: \"small\",\n    variant: \"extended\",\n    color: \"primary\",\n    \"aria-label\": \"next\",\n    className: classes.margin,\n    onClick: nextButtonHandler,\n    disabled: date === formatedDate(new Date()),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Next\", React.createElement(ChevronRightIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), moment(date).isBefore(formatedDate(new Date())) && React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    onClick: goToTodayDateHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(TodayIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: \"Go to today\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }))));\n}\n\nDrawerContent.propTypes = {\n  settingsButtonHandler: PropTypes.func,\n  logoutButtonHandler: PropTypes.func,\n  handleDateChange: PropTypes.func,\n  goToTodayDateHandler: PropTypes.func,\n  prevButtonHandler: PropTypes.func,\n  nextButtonHandler: PropTypes.func,\n  date: PropTypes.string\n};\nDrawerContent.defaultProps = {\n  settingsButtonHandler: noop,\n  logoutButtonHandler: noop,\n  handleDateChange: PropTypes.noop,\n  prevButtonHandler: noop,\n  nextButtonHandler: noop,\n  date: '',\n  goToTodayDateHandler: noop\n};\nexport default DrawerContent;","map":{"version":3,"sources":["D:/REACT JS/React Upforce/daily-todo-fb-final/src/shared/DrawerContent/DrawerContent.js"],"names":["React","PropTypes","Moment","moment","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","Divider","Fab","IconButton","List","ListItem","ListItemIcon","ListItemText","ExitToAppIcon","TodayIcon","ChevronLeftIcon","ChevronRightIcon","SettingsTwoToneIcon","makeStyles","red","noop","formatedDate","useStyles","theme","toolbar","minHeight","padding","display","justifyContent","alignItems","color","dateGridOne","gridTemplateColumns","dateDigit","textAlign","settingsContainer","borderLeft","settingButton","backgroundColor","dateGridTwo","paddingTop","fontSize","button","textDecoration","spacing","borderRadius","inline","listItemDatePicker","margin","zoom","nextPrevButtons","DrawerContent","settingsButtonHandler","logoutButtonHandler","handleDateChange","goToTodayDateHandler","prevButtonHandler","nextButtonHandler","date","uid","localStorage","getItem","classes","Date","undefined","muiPickerUtilsContainer","isBefore","propTypes","func","string","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Divider from '@material-ui/core/Divider';\nimport Fab from '@material-ui/core/Fab';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport TodayIcon from '@material-ui/icons/Today';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport SettingsTwoToneIcon from '@material-ui/icons/SettingsTwoTone';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\n\nimport { noop, formatedDate } from '../../utils';\nimport '../../assets/styles/0-modules/shared/Drawer/drawer.css';\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    minHeight: 52,\n    padding: '0 10px',\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    color: red[500],\n  },\n  dateGridOne: {\n    display: 'grid',\n    gridTemplateColumns: '50px 130px',\n  },\n  dateDigit: {\n    textAlign: 'center',\n  },\n  settingsContainer: {\n    borderLeft: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  settingButton: {\n    backgroundColor: 'transparent !important',\n  },\n  dateGridTwo: {\n    paddingTop: '0.4rem',\n    fontSize: '1rem',\n  },\n  moment: {\n    fontSize: '2.5rem',\n  },\n  button: {\n    color: '#3f51b5',\n    textDecoration: 'none',\n    padding: theme.spacing(1),\n    borderRadius: '5px',\n  },\n  inline: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  listItemDatePicker: {\n    padding: 0,\n    margin: 0,\n    zoom: 0.8,\n  },\n  nextPrevButtons: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction DrawerContent({\n  settingsButtonHandler,\n  logoutButtonHandler,\n  handleDateChange,\n  goToTodayDateHandler,\n  prevButtonHandler,\n  nextButtonHandler,\n  date,\n}) {\n  const uid = localStorage.getItem('uid');\n  const classes = useStyles();\n  return (\n    <div>\n      <div className={classes.toolbar}>\n        <div className={classes.dateGridOne}>\n          <div className={classes.dateDigit}>\n            <Moment format=\"D\" className={classes.moment}>\n              {date || new Date()}\n            </Moment>\n          </div>\n          <div className={classes.dateGridTwo}>\n            <div>\n              <Moment format=\"dddd\">\n                {date || new Date()}\n              </Moment>\n            </div>\n            <div>\n              <Moment format=\"MMMM, YYYY\">\n                {date || new Date()}\n              </Moment>\n            </div>\n          </div>\n        </div>\n        <div className={classes.settingsContainer}>\n          <IconButton\n            type=\"button\"\n            onClick={settingsButtonHandler}\n            className={classes.settingButton}\n            aria-label=\"settings\"\n          >\n            <SettingsTwoToneIcon fontSize=\"large\" />\n          </IconButton>\n        </div>\n      </div>\n      <Divider />\n\n      {\n        (uid !== '' && uid !== null && uid !== undefined)\n        && (\n          <List>\n            <ListItem button onClick={logoutButtonHandler}>\n              <ListItemIcon><ExitToAppIcon /></ListItemIcon>\n              <ListItemText primary=\"LOGOUT\" />\n            </ListItem>\n          </List>\n        )\n      }\n      <Divider />\n      <List>\n        <ListItem className={classes.listItemDatePicker}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils} className={classes.muiPickerUtilsContainer}>\n            <KeyboardDatePicker\n              disableToolbar\n              variant=\"static\"\n              format=\"MM/dd/yyyy\"\n              margin=\"normal\"\n              id=\"date-picker-inline\"\n              label=\"Date picker inline\"\n              value={date}\n              maxDate={new Date()}\n              onChange={handleDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n            />\n          </MuiPickersUtilsProvider>\n        </ListItem>\n      </List>\n      <Divider />\n      <List className={classes.nextPrevButtons}>\n        <Fab\n          size=\"small\"\n          variant=\"extended\"\n          color=\"primary\"\n          aria-label=\"prev\"\n          className={classes.margin}\n          onClick={prevButtonHandler}\n        >\n          <ChevronLeftIcon />\n          Prev\n        </Fab>\n        <Fab\n          size=\"small\"\n          variant=\"extended\"\n          color=\"primary\"\n          aria-label=\"next\"\n          className={classes.margin}\n          onClick={nextButtonHandler}\n          disabled={(date === formatedDate(new Date()))}\n        >\n          Next\n          <ChevronRightIcon />\n        </Fab>\n      </List>\n      <Divider />\n      {\n        moment(date).isBefore(formatedDate(new Date()))\n        && (\n          <List>\n            <ListItem button onClick={goToTodayDateHandler}>\n              <ListItemIcon><TodayIcon /></ListItemIcon>\n              <ListItemText primary=\"Go to today\" />\n            </ListItem>\n          </List>\n        )\n      }\n    </div>\n  );\n}\n\nDrawerContent.propTypes = {\n  settingsButtonHandler: PropTypes.func,\n  logoutButtonHandler: PropTypes.func,\n  handleDateChange: PropTypes.func,\n  goToTodayDateHandler: PropTypes.func,\n  prevButtonHandler: PropTypes.func,\n  nextButtonHandler: PropTypes.func,\n  date: PropTypes.string,\n};\n\nDrawerContent.defaultProps = {\n  settingsButtonHandler: noop,\n  logoutButtonHandler: noop,\n  handleDateChange: PropTypes.noop,\n  prevButtonHandler: noop,\n  nextButtonHandler: noop,\n  date: '',\n  goToTodayDateHandler: noop,\n};\n\nexport default DrawerContent;\n"]},"metadata":{},"sourceType":"module"}