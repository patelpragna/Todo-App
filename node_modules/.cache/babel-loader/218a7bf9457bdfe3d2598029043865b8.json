{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT JS\\\\React Upforce\\\\daily-todo-fb-final\\\\src\\\\modules\\\\Home\\\\AddTodo\\\\AddTodoContainer.js\";\n\n/* eslint-disable no-shadow */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CronJob } from 'cron';\nimport * as Yup from 'yup';\nimport AddTodo from './AddTodo';\nimport { addTodo, updateTodo, cancelEdit } from '../../../redux/todoActions';\nimport { noop, addTodoToast, checkForTime } from '../../../utils';\n\nconst AddTodoContainer = ({\n  addTodo,\n  updateTodo,\n  cancelEdit,\n  user,\n  isEdit,\n  selectedTodo,\n  date,\n  todos,\n  deleteTodoLoading,\n  showTodoNotification\n}) => {\n  const validationSchema = Yup.object().shape({\n    todo: Yup.string().required('Todo is required')\n  });\n\n  const addTodoButtonHandler = data => {\n    addTodo(data, date, user).then(() => {\n      addTodoToast(data.todo);\n    });\n  };\n\n  const updateTodoButtonHandler = data => {\n    updateTodo(selectedTodo.id, data, user, date);\n  };\n\n  const cancelEditButtonHandler = () => {\n    cancelEdit();\n  };\n\n  return React.createElement(AddTodo, {\n    isEdit: isEdit,\n    date: date,\n    initialValues: {\n      todo: selectedTodo.todo || ''\n    },\n    validationSchema: validationSchema,\n    addTodoButtonHandler: addTodoButtonHandler,\n    updateTodoButtonHandler: updateTodoButtonHandler,\n    cancelEditButtonHandler: cancelEditButtonHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  });\n};\n\nAddTodoContainer.propTypes = {\n  addTodo: PropTypes.func,\n  updateTodo: PropTypes.func,\n  cancelEdit: PropTypes.func,\n  user: PropTypes.instanceOf(Object),\n  isEdit: PropTypes.bool,\n  selectedTodo: PropTypes.instanceOf(Object),\n  date: PropTypes.string\n};\nAddTodoContainer.defaultProps = {\n  addTodo: noop,\n  updateTodo: noop,\n  cancelEdit: noop,\n  user: {},\n  isEdit: false,\n  selectedTodo: {},\n  date: ''\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  isEdit: state.todo.isEdit,\n  selectedTodo: state.todo.selectedTodo,\n  date: state.todo.date,\n  deleteTodoLoading: state.todo.deleteTodoLoading,\n  showTodoNotification: state.todo.showTodoNotification,\n  todos: state.todo.todos\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addTodo: (data, date, user) => dispatch(addTodo(data, date, user)),\n  updateTodo: (id, data, user, date) => dispatch(updateTodo(id, data, user, date)),\n  cancelEdit: () => dispatch(cancelEdit())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodoContainer);","map":{"version":3,"sources":["D:/REACT JS/React Upforce/daily-todo-fb-final/src/modules/Home/AddTodo/AddTodoContainer.js"],"names":["React","useEffect","PropTypes","connect","CronJob","Yup","AddTodo","addTodo","updateTodo","cancelEdit","noop","addTodoToast","checkForTime","AddTodoContainer","user","isEdit","selectedTodo","date","todos","deleteTodoLoading","showTodoNotification","validationSchema","object","shape","todo","string","required","addTodoButtonHandler","data","then","updateTodoButtonHandler","id","cancelEditButtonHandler","propTypes","func","instanceOf","Object","bool","defaultProps","mapStateToProps","state","auth","mapDispatchToProps","dispatch"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B,QAAgD,4BAAhD;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,YAA7B,QAAiD,gBAAjD;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AACxBN,EAAAA,OADwB;AAExBC,EAAAA,UAFwB;AAGxBC,EAAAA,UAHwB;AAIxBK,EAAAA,IAJwB;AAKxBC,EAAAA,MALwB;AAMxBC,EAAAA,YANwB;AAOxBC,EAAAA,IAPwB;AAQxBC,EAAAA,KARwB;AASxBC,EAAAA,iBATwB;AAUxBC,EAAAA;AAVwB,CAAD,KAWnB;AACJ,QAAMC,gBAAgB,GAAGhB,GAAG,CAACiB,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,IAAAA,IAAI,EAAEnB,GAAG,CACNoB,MADG,GAEHC,QAFG,CAEM,kBAFN;AADoC,GAAnB,CAAzB;;AAMA,QAAMC,oBAAoB,GAAGC,IAAI,IAAI;AACnCrB,IAAAA,OAAO,CAACqB,IAAD,EAAOX,IAAP,EAAaH,IAAb,CAAP,CAA0Be,IAA1B,CAA+B,MAAM;AACnClB,MAAAA,YAAY,CAACiB,IAAI,CAACJ,IAAN,CAAZ;AACD,KAFD;AAGD,GAJD;;AAMA,QAAMM,uBAAuB,GAAGF,IAAI,IAAI;AACtCpB,IAAAA,UAAU,CAACQ,YAAY,CAACe,EAAd,EAAkBH,IAAlB,EAAwBd,IAAxB,EAA8BG,IAA9B,CAAV;AACD,GAFD;;AAIA,QAAMe,uBAAuB,GAAG,MAAM;AACpCvB,IAAAA,UAAU;AACX,GAFD;;AAIA,SACE,oBAAC,OAAD;AACE,IAAA,MAAM,EAAEM,MADV;AAEE,IAAA,IAAI,EAAEE,IAFR;AAGE,IAAA,aAAa,EAAE;AACbO,MAAAA,IAAI,EAAER,YAAY,CAACQ,IAAb,IAAqB;AADd,KAHjB;AAME,IAAA,gBAAgB,EAAEH,gBANpB;AAOE,IAAA,oBAAoB,EAAEM,oBAPxB;AAQE,IAAA,uBAAuB,EAAEG,uBAR3B;AASE,IAAA,uBAAuB,EAAEE,uBAT3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAaD,CA7CD;;AA+CAnB,gBAAgB,CAACoB,SAAjB,GAA6B;AAC3B1B,EAAAA,OAAO,EAAEL,SAAS,CAACgC,IADQ;AAE3B1B,EAAAA,UAAU,EAAEN,SAAS,CAACgC,IAFK;AAG3BzB,EAAAA,UAAU,EAAEP,SAAS,CAACgC,IAHK;AAI3BpB,EAAAA,IAAI,EAAEZ,SAAS,CAACiC,UAAV,CAAqBC,MAArB,CAJqB;AAK3BrB,EAAAA,MAAM,EAAEb,SAAS,CAACmC,IALS;AAM3BrB,EAAAA,YAAY,EAAEd,SAAS,CAACiC,UAAV,CAAqBC,MAArB,CANa;AAO3BnB,EAAAA,IAAI,EAAEf,SAAS,CAACuB;AAPW,CAA7B;AAUAZ,gBAAgB,CAACyB,YAAjB,GAAgC;AAC9B/B,EAAAA,OAAO,EAAEG,IADqB;AAE9BF,EAAAA,UAAU,EAAEE,IAFkB;AAG9BD,EAAAA,UAAU,EAAEC,IAHkB;AAI9BI,EAAAA,IAAI,EAAE,EAJwB;AAK9BC,EAAAA,MAAM,EAAE,KALsB;AAM9BC,EAAAA,YAAY,EAAE,EANgB;AAO9BC,EAAAA,IAAI,EAAE;AAPwB,CAAhC;;AAUA,MAAMsB,eAAe,GAAGC,KAAK,KAAK;AAChC1B,EAAAA,IAAI,EAAE0B,KAAK,CAACC,IAAN,CAAW3B,IADe;AAEhCC,EAAAA,MAAM,EAAEyB,KAAK,CAAChB,IAAN,CAAWT,MAFa;AAGhCC,EAAAA,YAAY,EAAEwB,KAAK,CAAChB,IAAN,CAAWR,YAHO;AAIhCC,EAAAA,IAAI,EAAEuB,KAAK,CAAChB,IAAN,CAAWP,IAJe;AAKhCE,EAAAA,iBAAiB,EAAEqB,KAAK,CAAChB,IAAN,CAAWL,iBALE;AAMhCC,EAAAA,oBAAoB,EAAEoB,KAAK,CAAChB,IAAN,CAAWJ,oBAND;AAOhCF,EAAAA,KAAK,EAAEsB,KAAK,CAAChB,IAAN,CAAWN;AAPc,CAAL,CAA7B;;AAUA,MAAMwB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCpC,EAAAA,OAAO,EAAE,CAACqB,IAAD,EAAOX,IAAP,EAAaH,IAAb,KAAsB6B,QAAQ,CAACpC,OAAO,CAACqB,IAAD,EAAOX,IAAP,EAAaH,IAAb,CAAR,CADD;AAEtCN,EAAAA,UAAU,EAAE,CAACuB,EAAD,EAAKH,IAAL,EAAWd,IAAX,EAAiBG,IAAjB,KAA0B0B,QAAQ,CAACnC,UAAU,CAACuB,EAAD,EAAKH,IAAL,EAAWd,IAAX,EAAiBG,IAAjB,CAAX,CAFR;AAGtCR,EAAAA,UAAU,EAAE,MAAMkC,QAAQ,CAAClC,UAAU,EAAX;AAHY,CAAL,CAAnC;;AAMA,eAAeN,OAAO,CAACoC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C7B,gBAA7C,CAAf","sourcesContent":["/* eslint-disable no-shadow */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CronJob } from 'cron';\nimport * as Yup from 'yup';\n\nimport AddTodo from './AddTodo';\n\nimport { addTodo, updateTodo, cancelEdit } from '../../../redux/todoActions';\nimport { noop, addTodoToast, checkForTime } from '../../../utils';\n\nconst AddTodoContainer = ({\n  addTodo,\n  updateTodo,\n  cancelEdit,\n  user,\n  isEdit,\n  selectedTodo,\n  date,\n  todos,\n  deleteTodoLoading,\n  showTodoNotification,\n}) => {\n  const validationSchema = Yup.object().shape({\n    todo: Yup\n      .string()\n      .required('Todo is required'),\n  });\n\n  const addTodoButtonHandler = data => {\n    addTodo(data, date, user).then(() => {\n      addTodoToast(data.todo);\n    });\n  };\n\n  const updateTodoButtonHandler = data => {\n    updateTodo(selectedTodo.id, data, user, date);\n  };\n\n  const cancelEditButtonHandler = () => {\n    cancelEdit();\n  };\n\n  return (\n    <AddTodo\n      isEdit={isEdit}\n      date={date}\n      initialValues={{\n        todo: selectedTodo.todo || '',\n      }}\n      validationSchema={validationSchema}\n      addTodoButtonHandler={addTodoButtonHandler}\n      updateTodoButtonHandler={updateTodoButtonHandler}\n      cancelEditButtonHandler={cancelEditButtonHandler}\n    />\n  );\n};\n\nAddTodoContainer.propTypes = {\n  addTodo: PropTypes.func,\n  updateTodo: PropTypes.func,\n  cancelEdit: PropTypes.func,\n  user: PropTypes.instanceOf(Object),\n  isEdit: PropTypes.bool,\n  selectedTodo: PropTypes.instanceOf(Object),\n  date: PropTypes.string,\n};\n\nAddTodoContainer.defaultProps = {\n  addTodo: noop,\n  updateTodo: noop,\n  cancelEdit: noop,\n  user: {},\n  isEdit: false,\n  selectedTodo: {},\n  date: '',\n};\n\nconst mapStateToProps = state => ({\n  user: state.auth.user,\n  isEdit: state.todo.isEdit,\n  selectedTodo: state.todo.selectedTodo,\n  date: state.todo.date,\n  deleteTodoLoading: state.todo.deleteTodoLoading,\n  showTodoNotification: state.todo.showTodoNotification,\n  todos: state.todo.todos,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addTodo: (data, date, user) => dispatch(addTodo(data, date, user)),\n  updateTodo: (id, data, user, date) => dispatch(updateTodo(id, data, user, date)),\n  cancelEdit: () => dispatch(cancelEdit()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodoContainer);\n"]},"metadata":{},"sourceType":"module"}