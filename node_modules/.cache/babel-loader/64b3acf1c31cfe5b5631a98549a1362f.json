{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT JS\\\\React Upforce\\\\daily-todo-fb-final\\\\src\\\\shared\\\\Dialog\\\\SettingsDialog.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker } from '@material-ui/pickers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Box from '@material-ui/core/Box';\nimport { noop } from '../../utils';\nconst useStyles = makeStyles(theme => ({\n  timePicker: {\n    margin: theme.spacing(1),\n    maxWidth: '10rem'\n  }\n}));\n\nfunction SettingDialog({\n  saveButtonHandler,\n  handleMorningTimeChange,\n  handleEveningTimeChange,\n  handleClose,\n  changedMorningTime,\n  changedEveningTime,\n  open\n}) {\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Box, {\n    color: \"primary.main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"NOTIFICATION SETTING\")), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Please select the time you want to see the notification!\"), React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"space-around\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(KeyboardTimePicker, {\n    className: classes.timePicker,\n    ampm: true,\n    label: \"Morning Notification\",\n    value: changedMorningTime,\n    onChange: handleMorningTimeChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(KeyboardTimePicker, {\n    className: classes.timePicker,\n    ampm: true,\n    label: \"Evening Notification\",\n    value: changedEveningTime,\n    onChange: handleEveningTimeChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })))), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: saveButtonHandler,\n    variant: \"outlined\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Save\"))));\n}\n\nSettingDialog.propTypes = {\n  saveButtonHandler: PropTypes.func,\n  handleClose: PropTypes.func,\n  handleMorningTimeChange: PropTypes.func,\n  handleEveningTimeChange: PropTypes.func,\n  changedMorningTime: PropTypes.string,\n  changedEveningTime: PropTypes.string,\n  open: PropTypes.bool\n};\nSettingDialog.defaultProps = {\n  saveButtonHandler: noop,\n  handleClose: noop,\n  handleMorningTimeChange: noop,\n  handleEveningTimeChange: noop,\n  changedMorningTime: '',\n  changedEveningTime: '',\n  open: false\n};\nexport default SettingDialog;","map":{"version":3,"sources":["D:/REACT JS/React Upforce/daily-todo-fb-final/src/shared/Dialog/SettingsDialog.js"],"names":["React","PropTypes","MuiPickersUtilsProvider","KeyboardTimePicker","makeStyles","Grid","DateFnsUtils","Button","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","Box","noop","useStyles","theme","timePicker","margin","spacing","maxWidth","SettingDialog","saveButtonHandler","handleMorningTimeChange","handleEveningTimeChange","handleClose","changedMorningTime","changedEveningTime","open","classes","propTypes","func","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MuiPickersUtilsProvider, KeyboardTimePicker } from '@material-ui/pickers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Box from '@material-ui/core/Box';\n\nimport { noop } from '../../utils';\n\nconst useStyles = makeStyles(theme => ({\n  timePicker: {\n    margin: theme.spacing(1),\n    maxWidth: '10rem',\n  },\n}));\n\nfunction SettingDialog({\n  saveButtonHandler,\n  handleMorningTimeChange,\n  handleEveningTimeChange,\n  handleClose,\n  changedMorningTime,\n  changedEveningTime,\n  open,\n}) {\n  const classes = useStyles();\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          <Box color=\"primary.main\">NOTIFICATION SETTING</Box>\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Please select the time you want to see the notification!\n          </DialogContentText>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <Grid container justify=\"space-around\">\n              <KeyboardTimePicker\n                className={classes.timePicker}\n                ampm\n                label=\"Morning Notification\"\n                value={changedMorningTime}\n                onChange={handleMorningTimeChange}\n              />\n              <KeyboardTimePicker\n                className={classes.timePicker}\n                ampm\n                label=\"Evening Notification\"\n                value={changedEveningTime}\n                onChange={handleEveningTimeChange}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={saveButtonHandler}\n            variant=\"outlined\"\n            color=\"primary\"\n          >\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nSettingDialog.propTypes = {\n  saveButtonHandler: PropTypes.func,\n  handleClose: PropTypes.func,\n  handleMorningTimeChange: PropTypes.func,\n  handleEveningTimeChange: PropTypes.func,\n  changedMorningTime: PropTypes.string,\n  changedEveningTime: PropTypes.string,\n  open: PropTypes.bool,\n};\n\nSettingDialog.defaultProps = {\n  saveButtonHandler: noop,\n  handleClose: noop,\n  handleMorningTimeChange: noop,\n  handleEveningTimeChange: noop,\n  changedMorningTime: '',\n  changedEveningTime: '',\n  open: false,\n};\n\nexport default SettingDialog;\n"]},"metadata":{},"sourceType":"module"}