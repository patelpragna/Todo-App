{"ast":null,"code":"import _objectSpread from \"D:\\\\REACT JS\\\\React Upforce\\\\daily-todo-fb-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport * as actionTypes from './actionTypes';\nimport { formatedDate } from '../utils/index';\nconst initialValues = {\n  fetchTodoLoading: false,\n  addTodoLoading: false,\n  deleteTodoLoading: false,\n  markTodoDoneLoading: false,\n  updateTodoLoading: false,\n  fetchPreviouDayTodoLoading: false,\n  openPendingTodoDialog: false,\n  addPendingPreviousDayTodos: false,\n  showTodoNotification: false,\n  todos: [],\n  previousDayTodos: [],\n  isEdit: false,\n  selectedTodo: {},\n  date: formatedDate(new Date()),\n  copyBtnText: 'Copy to Clipboard',\n  toastClose: false\n};\n\nconst todoReducer = (state = initialValues, action) => {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case actionTypes.ADD_TODO_LOADING:\n      return _objectSpread({}, state, {\n        addTodoLoading: true\n      });\n\n    case actionTypes.ADD_TODO_SUCCESS:\n      return _objectSpread({}, state, {\n        addTodoLoading: false,\n        showTodoNotification: true,\n        todos: [...state.todos, _objectSpread({}, payload)]\n      });\n\n    case actionTypes.ADD_TODO_ERROR:\n      return _objectSpread({}, state, {\n        addTodoLoading: false\n      });\n\n    case actionTypes.COPY_TO_CLIPBOARD:\n      return _objectSpread({}, state, {\n        copyBtnText: 'Copied!'\n      });\n\n    case actionTypes.TOAST_CLOSE:\n      return _objectSpread({}, state, {\n        copyBtnText: 'Copy to Clipboard'\n      });\n\n    case actionTypes.FETCH_TODOS_LOADING:\n      return _objectSpread({}, state, {\n        fetchTodoLoading: true\n      });\n\n    case actionTypes.FETCH_TODOS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          fetchTodoLoading: false,\n          todos: payload.slice().sort((a, b) => a.createdAt - b.createdAt)\n        });\n      }\n\n    case actionTypes.FETCH_TODOS_ERROR:\n      return _objectSpread({}, state, {\n        fetchTodoLoading: false\n      });\n\n    case actionTypes.FETCH_PREVIOUS_DAY_TODOS_LOADING:\n      return _objectSpread({}, state, {\n        fetchPreviouDayTodoLoading: true\n      });\n\n    case actionTypes.FETCH_PREVIOUS_DAY_TODOS_SUCCESS:\n      return _objectSpread({}, state, {\n        fetchPreviouDayTodoLoading: false,\n        previousDayTodos: payload.filter(todo => todo.isDone === false)\n      });\n\n    case actionTypes.FETCH_PREVIOUS_DAY_TODOS_ERROR:\n      return _objectSpread({}, state, {\n        fetchPreviouDayTodoLoading: false\n      });\n\n    case actionTypes.ADD_PREVIOUS_DAY_TODOS:\n      return _objectSpread({}, state, {\n        addPendingPreviousDayTodos: true,\n        todos: [...state.todos, ...state.previousDayTodos]\n      });\n\n    case actionTypes.NO_ADD_PREVIOUS_DAY_TODOS:\n      return _objectSpread({}, state, {\n        addPendingPreviousDayTodos: false\n      });\n\n    case actionTypes.DELETE_TODO_LOADING:\n      return _objectSpread({}, state, {\n        deleteTodoLoading: true\n      });\n\n    case actionTypes.DELETE_TODO_SUCCESS:\n      return _objectSpread({}, state, {\n        deleteTodoLoading: false,\n        showTodoNotification: false,\n        todos: state.todos.filter(todo => todo.id !== payload.id)\n      });\n\n    case actionTypes.DELETE_TODO_ERROR:\n      return _objectSpread({}, state, {\n        deleteTodoLoading: false\n      });\n\n    case actionTypes.MARK_TODO_DONE_LOADING:\n      return _objectSpread({}, state, {\n        markTodoDoneLoading: true\n      });\n\n    case actionTypes.MARK_TODO_DONE_SUCCESS:\n      return _objectSpread({}, state, {\n        markTodoDoneLoading: false,\n        showTodoNotification: false,\n        todos: state.todos.map(todo => todo.createdAt === payload.createdAt ? _objectSpread({}, todo, {\n          isDone: !todo.isDone\n        }) : todo),\n        previousDayTodos: state.previousDayTodos.map(todo => todo.createdAt === payload.createdAt ? _objectSpread({}, todo, {\n          isDone: !todo.isDone\n        }) : todo)\n      });\n\n    case actionTypes.MARK_TODO_DONE_ERROR:\n      return _objectSpread({}, state, {\n        markTodoDoneLoading: false\n      });\n\n    case actionTypes.EDIT_TODO:\n      return _objectSpread({}, state, {\n        isEdit: true,\n        selectedTodo: state.todos.filter(todo => todo.id === payload.id)[0]\n      });\n\n    case actionTypes.CANCEL_EDIT:\n      return _objectSpread({}, state, {\n        isEdit: false,\n        selectedTodo: {}\n      });\n\n    case actionTypes.UPDATE_TODO_LOADING:\n      return _objectSpread({}, state, {\n        updateTodoLoading: true\n      });\n\n    case actionTypes.UPDATE_TODO_SUCCESS:\n      return _objectSpread({}, state, {\n        updateTodoLoading: false,\n        isEdit: false,\n        todos: state.todos.map(todo => todo.id === payload.id ? _objectSpread({}, todo, {\n          todo: payload.data.todo\n        }) : todo),\n        selectedTodo: {}\n      });\n\n    case actionTypes.UPDATE_TODO_ERROR:\n      return _objectSpread({}, state, {\n        updateTodoLoading: false\n      });\n\n    case actionTypes.DATE_CHANGE:\n      return _objectSpread({}, state, {\n        date: formatedDate(payload.data),\n        copyBtnText: 'Copy to Clipboard'\n      });\n\n    case actionTypes.OPEN_PENDING_TODO:\n      return _objectSpread({}, state, {\n        openPendingTodoDialog: true\n      });\n\n    case actionTypes.CLOSE_PENDING_TODO:\n      return _objectSpread({}, state, {\n        openPendingTodoDialog: false\n      });\n\n    case actionTypes.SIGN_OUT_LOADING:\n      return _objectSpread({}, state);\n\n    case actionTypes.SIGN_OUT_SUCCESS:\n      return _objectSpread({}, state, {\n        todos: []\n      });\n\n    case actionTypes.SIGN_OUT_ERROR:\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default todoReducer;","map":{"version":3,"sources":["D:/REACT JS/React Upforce/daily-todo-fb-final/src/redux/todoReducers.js"],"names":["actionTypes","formatedDate","initialValues","fetchTodoLoading","addTodoLoading","deleteTodoLoading","markTodoDoneLoading","updateTodoLoading","fetchPreviouDayTodoLoading","openPendingTodoDialog","addPendingPreviousDayTodos","showTodoNotification","todos","previousDayTodos","isEdit","selectedTodo","date","Date","copyBtnText","toastClose","todoReducer","state","action","type","payload","ADD_TODO_LOADING","ADD_TODO_SUCCESS","ADD_TODO_ERROR","COPY_TO_CLIPBOARD","TOAST_CLOSE","FETCH_TODOS_LOADING","FETCH_TODOS_SUCCESS","slice","sort","a","b","createdAt","FETCH_TODOS_ERROR","FETCH_PREVIOUS_DAY_TODOS_LOADING","FETCH_PREVIOUS_DAY_TODOS_SUCCESS","filter","todo","isDone","FETCH_PREVIOUS_DAY_TODOS_ERROR","ADD_PREVIOUS_DAY_TODOS","NO_ADD_PREVIOUS_DAY_TODOS","DELETE_TODO_LOADING","DELETE_TODO_SUCCESS","id","DELETE_TODO_ERROR","MARK_TODO_DONE_LOADING","MARK_TODO_DONE_SUCCESS","map","MARK_TODO_DONE_ERROR","EDIT_TODO","CANCEL_EDIT","UPDATE_TODO_LOADING","UPDATE_TODO_SUCCESS","data","UPDATE_TODO_ERROR","DATE_CHANGE","OPEN_PENDING_TODO","CLOSE_PENDING_TODO","SIGN_OUT_LOADING","SIGN_OUT_SUCCESS","SIGN_OUT_ERROR"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\nimport { formatedDate } from '../utils/index';\n\nconst initialValues = {\n  fetchTodoLoading: false,\n  addTodoLoading: false,\n  deleteTodoLoading: false,\n  markTodoDoneLoading: false,\n  updateTodoLoading: false,\n  fetchPreviouDayTodoLoading: false,\n  openPendingTodoDialog: false,\n  addPendingPreviousDayTodos: false,\n  showTodoNotification: false,\n  todos: [],\n  previousDayTodos: [],\n  isEdit: false,\n  selectedTodo: {},\n  date: formatedDate(new Date()),\n  copyBtnText: 'Copy to Clipboard',\n  toastClose: false,\n};\n\nconst todoReducer = (state = initialValues, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case actionTypes.ADD_TODO_LOADING:\n      return {\n        ...state,\n        addTodoLoading: true,\n      };\n    case actionTypes.ADD_TODO_SUCCESS:\n      return {\n        ...state,\n        addTodoLoading: false,\n        showTodoNotification: true,\n        todos: [\n          ...state.todos,\n          {\n            ...payload,\n          },\n        ],\n      };\n    case actionTypes.ADD_TODO_ERROR:\n      return {\n        ...state,\n        addTodoLoading: false,\n      };\n    case actionTypes.COPY_TO_CLIPBOARD:\n      return {\n        ...state,\n        copyBtnText: 'Copied!',\n      };\n    case actionTypes.TOAST_CLOSE:\n      return {\n        ...state,\n        copyBtnText: 'Copy to Clipboard',\n      };\n    case actionTypes.FETCH_TODOS_LOADING:\n      return {\n        ...state,\n        fetchTodoLoading: true,\n      };\n    case actionTypes.FETCH_TODOS_SUCCESS: {\n      return {\n        ...state,\n        fetchTodoLoading: false,\n        todos: payload\n          .slice()\n          .sort((a, b) => a.createdAt - b.createdAt),\n      };\n    }\n    case actionTypes.FETCH_TODOS_ERROR:\n      return {\n        ...state,\n        fetchTodoLoading: false,\n      };\n    case actionTypes.FETCH_PREVIOUS_DAY_TODOS_LOADING:\n      return {\n        ...state,\n        fetchPreviouDayTodoLoading: true,\n      };\n    case actionTypes.FETCH_PREVIOUS_DAY_TODOS_SUCCESS:\n      return {\n        ...state,\n        fetchPreviouDayTodoLoading: false,\n        previousDayTodos: payload.filter(todo => todo.isDone === false),\n      };\n    case actionTypes.FETCH_PREVIOUS_DAY_TODOS_ERROR:\n      return {\n        ...state,\n        fetchPreviouDayTodoLoading: false,\n      };\n    case actionTypes.ADD_PREVIOUS_DAY_TODOS:\n      return {\n        ...state,\n        addPendingPreviousDayTodos: true,\n        todos: [\n          ...state.todos,\n          ...state.previousDayTodos,\n        ],\n      };\n    case actionTypes.NO_ADD_PREVIOUS_DAY_TODOS:\n      return {\n        ...state,\n        addPendingPreviousDayTodos: false,\n      };\n    case actionTypes.DELETE_TODO_LOADING:\n      return {\n        ...state,\n        deleteTodoLoading: true,\n      };\n    case actionTypes.DELETE_TODO_SUCCESS:\n      return {\n        ...state,\n        deleteTodoLoading: false,\n        showTodoNotification: false,\n        todos: state.todos.filter(todo => todo.id !== payload.id),\n      };\n    case actionTypes.DELETE_TODO_ERROR:\n      return {\n        ...state,\n        deleteTodoLoading: false,\n      };\n    case actionTypes.MARK_TODO_DONE_LOADING:\n      return {\n        ...state,\n        markTodoDoneLoading: true,\n      };\n    case actionTypes.MARK_TODO_DONE_SUCCESS:\n      return {\n        ...state,\n        markTodoDoneLoading: false,\n        showTodoNotification: false,\n        todos: state.todos.map(todo => (\n          (todo.createdAt === payload.createdAt)\n            ? {\n              ...todo,\n              isDone: !todo.isDone,\n            }\n            : todo)),\n        previousDayTodos: state.previousDayTodos.map(todo => (\n          (todo.createdAt === payload.createdAt)\n            ? {\n              ...todo,\n              isDone: !todo.isDone,\n            }\n            : todo)),\n      };\n    case actionTypes.MARK_TODO_DONE_ERROR:\n      return {\n        ...state,\n        markTodoDoneLoading: false,\n      };\n    case actionTypes.EDIT_TODO:\n      return {\n        ...state,\n        isEdit: true,\n        selectedTodo: state.todos.filter(todo => todo.id === payload.id)[0],\n      };\n    case actionTypes.CANCEL_EDIT:\n      return {\n        ...state,\n        isEdit: false,\n        selectedTodo: {},\n      };\n    case actionTypes.UPDATE_TODO_LOADING:\n      return {\n        ...state,\n        updateTodoLoading: true,\n      };\n    case actionTypes.UPDATE_TODO_SUCCESS:\n      return {\n        ...state,\n        updateTodoLoading: false,\n        isEdit: false,\n        todos: state.todos.map(todo => (\n          (todo.id === payload.id)\n            ? {\n              ...todo,\n              todo: payload.data.todo,\n            }\n            : todo\n        )),\n        selectedTodo: {},\n      };\n    case actionTypes.UPDATE_TODO_ERROR:\n      return {\n        ...state,\n        updateTodoLoading: false,\n      };\n    case actionTypes.DATE_CHANGE:\n      return {\n        ...state,\n        date: formatedDate(payload.data),\n        copyBtnText: 'Copy to Clipboard',\n      };\n    case actionTypes.OPEN_PENDING_TODO:\n      return {\n        ...state,\n        openPendingTodoDialog: true,\n      };\n    case actionTypes.CLOSE_PENDING_TODO:\n      return {\n        ...state,\n        openPendingTodoDialog: false,\n      };\n    case actionTypes.SIGN_OUT_LOADING:\n      return {\n        ...state,\n      };\n    case actionTypes.SIGN_OUT_SUCCESS:\n      return {\n        ...state,\n        todos: [],\n      };\n    case actionTypes.SIGN_OUT_ERROR:\n      return {\n        ...state,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default todoReducer;\n"]},"metadata":{},"sourceType":"module"}