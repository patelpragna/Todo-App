{"ast":null,"code":"import _objectSpread from \"D:\\\\REACT JS\\\\React Upforce\\\\daily-todo-fb-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport moment from 'moment';\nimport * as actionTypes from './actionTypes';\nimport { defaultTime } from '../utils/index';\nconst initialValues = {\n  updateNotificationTimeLoading: false,\n  fetchNotificationTimeLoading: false,\n  setNotificationTimeLoading: false,\n  changedMorningTime: defaultTime('11:00:00'),\n  changedEveningTime: defaultTime('19:00:00')\n};\n\nconst notificationReducer = (state = initialValues, action) => {\n  const type = action.type,\n        payload = action.payload;\n\n  switch (type) {\n    case actionTypes.SET_NOTIFICATION_TIME_LOADING:\n      return _objectSpread({}, state, {\n        setNotificationTimeLoading: true\n      });\n\n    case actionTypes.SET_NOTIFICATION_TIME_SUCCESS:\n      return _objectSpread({}, state, {\n        setNotificationTimeLoading: false\n      });\n\n    case actionTypes.SET_NOTIFICATION_TIME_ERROR:\n      return _objectSpread({}, state, {\n        setNotificationTimeLoading: false\n      });\n\n    case actionTypes.UPDATE_NOTIFICATION_TIME_LOADING:\n      return _objectSpread({}, state, {\n        updateNotificationTimeLoading: true\n      });\n\n    case actionTypes.UPDATE_NOTIFICATION_TIME_SUCCESS:\n      return _objectSpread({}, state, {\n        updateNotificationTimeLoading: false\n      });\n\n    case actionTypes.UPDATE_NOTIFICATION_TIME_ERROR:\n      return _objectSpread({}, state, {\n        updateNotificationTimeLoading: false\n      });\n\n    case actionTypes.FETCH_NOTIFICATION_TIME_LOADING:\n      return _objectSpread({}, state, {\n        fetchNotificationTimeLoading: true\n      });\n\n    case actionTypes.FETCH_NOTIFICATION_TIME_SUCCESS:\n      return _objectSpread({}, state, {\n        fetchNotificationTimeLoading: false,\n        changedMorningTime: payload.data ? payload.data.mTime : state.changedMorningTime,\n        changedEveningTime: payload.data ? payload.data.eTime : state.changedEveningTime\n      });\n\n    case actionTypes.FETCH_NOTIFICATION_TIME_ERROR:\n      return _objectSpread({}, state, {\n        fetchNotificationTimeLoading: false\n      });\n\n    case actionTypes.MORNING_TIME_CHANGE:\n      return _objectSpread({}, state, {\n        changedMorningTime: moment(payload.data).format()\n      });\n\n    case actionTypes.EVENING_TIME_CHANGE:\n      return _objectSpread({}, state, {\n        changedEveningTime: moment(payload.data).format()\n      });\n\n    case actionTypes.SIGN_OUT_LOADING:\n      return _objectSpread({}, state);\n\n    case actionTypes.SIGN_OUT_SUCCESS:\n      return _objectSpread({}, state, {\n        changedMorningTime: defaultTime('11:00:00'),\n        changedEveningTime: defaultTime('19:00:00')\n      });\n\n    case actionTypes.SIGN_OUT_ERROR:\n      return _objectSpread({}, state);\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default notificationReducer;","map":{"version":3,"sources":["D:/REACT JS/React Upforce/daily-todo-fb-final/src/redux/notificationReducer.js"],"names":["moment","actionTypes","defaultTime","initialValues","updateNotificationTimeLoading","fetchNotificationTimeLoading","setNotificationTimeLoading","changedMorningTime","changedEveningTime","notificationReducer","state","action","type","payload","SET_NOTIFICATION_TIME_LOADING","SET_NOTIFICATION_TIME_SUCCESS","SET_NOTIFICATION_TIME_ERROR","UPDATE_NOTIFICATION_TIME_LOADING","UPDATE_NOTIFICATION_TIME_SUCCESS","UPDATE_NOTIFICATION_TIME_ERROR","FETCH_NOTIFICATION_TIME_LOADING","FETCH_NOTIFICATION_TIME_SUCCESS","data","mTime","eTime","FETCH_NOTIFICATION_TIME_ERROR","MORNING_TIME_CHANGE","format","EVENING_TIME_CHANGE","SIGN_OUT_LOADING","SIGN_OUT_SUCCESS","SIGN_OUT_ERROR"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,6BAA6B,EAAE,KADX;AAEpBC,EAAAA,4BAA4B,EAAE,KAFV;AAGpBC,EAAAA,0BAA0B,EAAE,KAHR;AAIpBC,EAAAA,kBAAkB,EAAEL,WAAW,CAAC,UAAD,CAJX;AAKpBM,EAAAA,kBAAkB,EAAEN,WAAW,CAAC,UAAD;AALX,CAAtB;;AAQA,MAAMO,mBAAmB,GAAG,CAACC,KAAK,GAAGP,aAAT,EAAwBQ,MAAxB,KAAmC;AAAA,QACrDC,IADqD,GACnCD,MADmC,CACrDC,IADqD;AAAA,QAC/CC,OAD+C,GACnCF,MADmC,CAC/CE,OAD+C;;AAG7D,UAAQD,IAAR;AACE,SAAKX,WAAW,CAACa,6BAAjB;AACE,+BACKJ,KADL;AAEEJ,QAAAA,0BAA0B,EAAE;AAF9B;;AAIF,SAAKL,WAAW,CAACc,6BAAjB;AACE,+BACKL,KADL;AAEEJ,QAAAA,0BAA0B,EAAE;AAF9B;;AAIF,SAAKL,WAAW,CAACe,2BAAjB;AACE,+BACKN,KADL;AAEEJ,QAAAA,0BAA0B,EAAE;AAF9B;;AAIF,SAAKL,WAAW,CAACgB,gCAAjB;AACE,+BACKP,KADL;AAEEN,QAAAA,6BAA6B,EAAE;AAFjC;;AAIF,SAAKH,WAAW,CAACiB,gCAAjB;AACE,+BACKR,KADL;AAEEN,QAAAA,6BAA6B,EAAE;AAFjC;;AAIF,SAAKH,WAAW,CAACkB,8BAAjB;AACE,+BACKT,KADL;AAEEN,QAAAA,6BAA6B,EAAE;AAFjC;;AAIF,SAAKH,WAAW,CAACmB,+BAAjB;AACE,+BACKV,KADL;AAEEL,QAAAA,4BAA4B,EAAE;AAFhC;;AAIF,SAAKJ,WAAW,CAACoB,+BAAjB;AACE,+BACKX,KADL;AAEEL,QAAAA,4BAA4B,EAAE,KAFhC;AAGEE,QAAAA,kBAAkB,EAAGM,OAAO,CAACS,IAAR,GAAeT,OAAO,CAACS,IAAR,CAAaC,KAA5B,GAAoCb,KAAK,CAACH,kBAHjE;AAIEC,QAAAA,kBAAkB,EAAGK,OAAO,CAACS,IAAR,GAAeT,OAAO,CAACS,IAAR,CAAaE,KAA5B,GAAoCd,KAAK,CAACF;AAJjE;;AAMF,SAAKP,WAAW,CAACwB,6BAAjB;AACE,+BACKf,KADL;AAEEL,QAAAA,4BAA4B,EAAE;AAFhC;;AAIF,SAAKJ,WAAW,CAACyB,mBAAjB;AACE,+BACKhB,KADL;AAEEH,QAAAA,kBAAkB,EAAEP,MAAM,CAACa,OAAO,CAACS,IAAT,CAAN,CAAqBK,MAArB;AAFtB;;AAIF,SAAK1B,WAAW,CAAC2B,mBAAjB;AACE,+BACKlB,KADL;AAEEF,QAAAA,kBAAkB,EAAER,MAAM,CAACa,OAAO,CAACS,IAAT,CAAN,CAAqBK,MAArB;AAFtB;;AAIF,SAAK1B,WAAW,CAAC4B,gBAAjB;AACE,+BACKnB,KADL;;AAGF,SAAKT,WAAW,CAAC6B,gBAAjB;AACE,+BACKpB,KADL;AAEEH,QAAAA,kBAAkB,EAAEL,WAAW,CAAC,UAAD,CAFjC;AAGEM,QAAAA,kBAAkB,EAAEN,WAAW,CAAC,UAAD;AAHjC;;AAKF,SAAKD,WAAW,CAAC8B,cAAjB;AACE,+BACKrB,KADL;;AAGF;AACE,+BACKA,KADL;AAzEJ;AA6ED,CAhFD;;AAkFA,eAAeD,mBAAf","sourcesContent":["import moment from 'moment';\nimport * as actionTypes from './actionTypes';\nimport { defaultTime } from '../utils/index';\n\nconst initialValues = {\n  updateNotificationTimeLoading: false,\n  fetchNotificationTimeLoading: false,\n  setNotificationTimeLoading: false,\n  changedMorningTime: defaultTime('11:00:00'),\n  changedEveningTime: defaultTime('19:00:00'),\n};\n\nconst notificationReducer = (state = initialValues, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case actionTypes.SET_NOTIFICATION_TIME_LOADING:\n      return {\n        ...state,\n        setNotificationTimeLoading: true,\n      };\n    case actionTypes.SET_NOTIFICATION_TIME_SUCCESS:\n      return {\n        ...state,\n        setNotificationTimeLoading: false,\n      };\n    case actionTypes.SET_NOTIFICATION_TIME_ERROR:\n      return {\n        ...state,\n        setNotificationTimeLoading: false,\n      };\n    case actionTypes.UPDATE_NOTIFICATION_TIME_LOADING:\n      return {\n        ...state,\n        updateNotificationTimeLoading: true,\n      };\n    case actionTypes.UPDATE_NOTIFICATION_TIME_SUCCESS:\n      return {\n        ...state,\n        updateNotificationTimeLoading: false,\n      };\n    case actionTypes.UPDATE_NOTIFICATION_TIME_ERROR:\n      return {\n        ...state,\n        updateNotificationTimeLoading: false,\n      };\n    case actionTypes.FETCH_NOTIFICATION_TIME_LOADING:\n      return {\n        ...state,\n        fetchNotificationTimeLoading: true,\n      };\n    case actionTypes.FETCH_NOTIFICATION_TIME_SUCCESS:\n      return {\n        ...state,\n        fetchNotificationTimeLoading: false,\n        changedMorningTime: (payload.data ? payload.data.mTime : state.changedMorningTime),\n        changedEveningTime: (payload.data ? payload.data.eTime : state.changedEveningTime),\n      };\n    case actionTypes.FETCH_NOTIFICATION_TIME_ERROR:\n      return {\n        ...state,\n        fetchNotificationTimeLoading: false,\n      };\n    case actionTypes.MORNING_TIME_CHANGE:\n      return {\n        ...state,\n        changedMorningTime: moment(payload.data).format(),\n      };\n    case actionTypes.EVENING_TIME_CHANGE:\n      return {\n        ...state,\n        changedEveningTime: moment(payload.data).format(),\n      };\n    case actionTypes.SIGN_OUT_LOADING:\n      return {\n        ...state,\n      };\n    case actionTypes.SIGN_OUT_SUCCESS:\n      return {\n        ...state,\n        changedMorningTime: defaultTime('11:00:00'),\n        changedEveningTime: defaultTime('19:00:00'),\n      };\n    case actionTypes.SIGN_OUT_ERROR:\n      return {\n        ...state,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n\nexport default notificationReducer;\n"]},"metadata":{},"sourceType":"module"}