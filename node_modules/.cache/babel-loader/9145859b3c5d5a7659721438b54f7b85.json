{"ast":null,"code":"import _slicedToArray from \"D:\\\\REACT JS\\\\React Upforce\\\\daily-todo-fb-final\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\n/* eslint-disable no-alert */\nimport { toast } from 'react-toastify';\nimport { css } from 'glamor';\nimport moment from 'moment';\nexport const noop = () => {};\nexport const previousDay = moment(moment(new Date()).subtract(1, 'days')).format('DDMMYYYY');\nexport const lastFriday = moment(moment(new Date()).subtract(3, 'days')).format('DDMMYYYY');\nexport const formatedTime = t => t ? moment(t).format('LT') : moment().format('LT');\nexport const formatedDate = d => moment(d).format('LL');\nexport const todoFormatter = data => data.map(todo => todo.isDone ? `\\n Done: ${formatedDate(todo.createdAt)} -- ${todo.todo}` : `\\n Pending: ${formatedDate(todo.createdAt)} -- ${todo.todo}`);\nexport const copyTodoToast = (date, cb) => {\n  toast.info(`Todos for ${date} copied to clipboard`, {\n    position: toast.POSITION.BOTTOM_RIGHT,\n    autoClose: 3000,\n    onClose: () => cb(),\n    className: css({\n      background: 'dodgreblue !important'\n    }),\n    bodyClassName: css({\n      fontSize: '1rem',\n      color: '#fff'\n    }),\n    progressClassName: css({\n      background: '#ddd !important'\n    })\n  });\n};\nexport const addTodoToast = body => {\n  toast.success(`Todo \"${body}\" added today at ${moment(new Date()).format('LT')}`, {\n    position: toast.POSITION.BOTTOM_RIGHT,\n    autoClose: 3000,\n    className: css({\n      background: '#7986cb !important'\n    }),\n    bodyClassName: css({\n      fontSize: '1rem',\n      color: '#eee'\n    }),\n    progressClassName: css({\n      background: '#eee !important'\n    })\n  });\n};\n\nfunction notify(bodyText) {\n  const title = 'DAILY TODO';\n  const options = {\n    body: bodyText\n  };\n\n  if (!('Notification' in window)) {\n    alert('This browser does not support desktop notification');\n  } else if (Notification.permission === 'granted') {\n    const notification = new Notification(title, options);\n  } else if (Notification.permission !== 'denied') {\n    Notification.requestPermission().then(permission => {\n      if (permission === 'granted') {\n        const notification = new Notification(title, options);\n      }\n    });\n  }\n}\n\nexport const notifyAt = (t, text) => {\n  if (t === moment().format('ha') || t === moment().format('h:mma')) {\n    notify(text);\n  }\n};\nexport const checkForTime = data => {\n  const extractedTime = data.match(/at\\s((\\d)|(\\d\\s)|(\\d{1,2}:\\d{2})|(\\d{1,2}:\\d{2}\\s))(pm|am)/gi);\n  const time = extractedTime && extractedTime[0].slice(3).replace(' ', '').toLowerCase();\n  const todoText = data.split(extractedTime)[0].trim();\n\n  if (time) {\n    notifyAt(time, todoText);\n  }\n};\nexport const notifyMe = (m, e) => {\n  const currentTime = formatedTime();\n\n  if (currentTime > m && currentTime <= '12:00 PM') {\n    notify('Good Morning! Lets add some todos :)');\n  } else if (m === currentTime) {\n    notify('Good Morning! Lets add some todos :)');\n  } else if (e === currentTime) {\n    notify('Good Evening! Please submit the todos :)');\n  }\n};\nexport const defaultTime = h => {\n  const time = h;\n  const day = moment();\n\n  const _time$split = time.split(':'),\n        _time$split2 = _slicedToArray(_time$split, 3),\n        hours = _time$split2[0],\n        minutes = _time$split2[1],\n        seconds = _time$split2[2];\n\n  day.set({\n    hours,\n    minutes,\n    seconds\n  });\n  return moment(day).format();\n};","map":{"version":3,"sources":["D:/REACT JS/React Upforce/daily-todo-fb-final/src/utils/index.js"],"names":["toast","css","moment","noop","previousDay","Date","subtract","format","lastFriday","formatedTime","t","formatedDate","d","todoFormatter","data","map","todo","isDone","createdAt","copyTodoToast","date","cb","info","position","POSITION","BOTTOM_RIGHT","autoClose","onClose","className","background","bodyClassName","fontSize","color","progressClassName","addTodoToast","body","success","notify","bodyText","title","options","window","alert","Notification","permission","notification","requestPermission","then","notifyAt","text","checkForTime","extractedTime","match","time","slice","replace","toLowerCase","todoText","split","trim","notifyMe","m","e","currentTime","defaultTime","h","day","hours","minutes","seconds","set"],"mappings":"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","sourcesContent":["/* eslint-disable no-alert */\nimport { toast } from 'react-toastify';\nimport { css } from 'glamor';\nimport moment from 'moment';\n\nexport const noop = () => { };\n\nexport const previousDay = moment(moment(new Date()).subtract(1, 'days')).format('DDMMYYYY');\nexport const lastFriday = moment(moment(new Date()).subtract(3, 'days')).format('DDMMYYYY');\n\nexport const formatedTime = t => (t ? moment(t).format('LT') : moment().format('LT'));\nexport const formatedDate = d => moment(d).format('LL');\n\nexport const todoFormatter = data => (\n  data.map(todo => (\n    (todo.isDone)\n      ? `\\n Done: ${formatedDate(todo.createdAt)} -- ${todo.todo}`\n      : `\\n Pending: ${formatedDate(todo.createdAt)} -- ${todo.todo}`))\n);\n\nexport const copyTodoToast = (date, cb) => {\n  toast.info(`Todos for ${date} copied to clipboard`, {\n    position: toast.POSITION.BOTTOM_RIGHT,\n    autoClose: 3000,\n    onClose: () => cb(),\n    className: css({\n      background: 'dodgreblue !important',\n    }),\n    bodyClassName: css({\n      fontSize: '1rem',\n      color: '#fff',\n    }),\n    progressClassName: css({\n      background: '#ddd !important',\n    }),\n  });\n};\n\nexport const addTodoToast = body => {\n  toast.success(`Todo \"${body}\" added today at ${moment(new Date()).format('LT')}`, {\n    position: toast.POSITION.BOTTOM_RIGHT,\n    autoClose: 3000,\n    className: css({\n      background: '#7986cb !important',\n    }),\n    bodyClassName: css({\n      fontSize: '1rem',\n      color: '#eee',\n    }),\n    progressClassName: css({\n      background: '#eee !important',\n    }),\n  });\n};\n\nfunction notify(bodyText) {\n  const title = 'DAILY TODO';\n  const options = {\n    body: bodyText,\n  };\n  if (!('Notification' in window)) {\n    alert('This browser does not support desktop notification');\n  } else if (Notification.permission === 'granted') {\n    const notification = new Notification(title, options);\n  } else if (Notification.permission !== 'denied') {\n    Notification.requestPermission().then(permission => {\n      if (permission === 'granted') {\n        const notification = new Notification(title, options);\n      }\n    });\n  }\n}\n\nexport const notifyAt = (t, text) => {\n  if ((t === moment().format('ha')) || (t === moment().format('h:mma'))) {\n    notify(text);\n  }\n};\n\nexport const checkForTime = data => {\n  const extractedTime = data.match(/at\\s((\\d)|(\\d\\s)|(\\d{1,2}:\\d{2})|(\\d{1,2}:\\d{2}\\s))(pm|am)/gi);\n  const time = extractedTime && extractedTime[0].slice(3).replace(' ', '').toLowerCase();\n  const todoText = data.split(extractedTime)[0].trim();\n  if (time) {\n    notifyAt(time, todoText);\n  }\n};\n\nexport const notifyMe = (m, e) => {\n  const currentTime = formatedTime();\n  if (currentTime > m && currentTime <= '12:00 PM') {\n    notify('Good Morning! Lets add some todos :)');\n  } else if (m === currentTime) {\n    notify('Good Morning! Lets add some todos :)');\n  } else if (e === currentTime) {\n    notify('Good Evening! Please submit the todos :)');\n  }\n};\n\nexport const defaultTime = h => {\n  const time = h;\n  const day = moment();\n  const [hours, minutes, seconds] = time.split(':');\n  day.set({ hours, minutes, seconds });\n  return moment(day).format();\n};\n"]},"metadata":{},"sourceType":"module"}