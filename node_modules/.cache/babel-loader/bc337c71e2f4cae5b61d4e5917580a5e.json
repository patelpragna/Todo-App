{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT JS\\\\React Upforce\\\\daily-todo-fb-final\\\\src\\\\modules\\\\Login\\\\LoginContainer.js\";\n\n/* eslint-disable no-shadow */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport BlockUi from 'react-block-ui';\nimport 'react-block-ui/style.css';\nimport { Loader } from 'react-loaders';\nimport 'loaders.css/loaders.min.css';\nimport { signin } from '../../redux/authActions';\nimport { noop } from '../../utils';\nimport Login from './Login';\nconst useStyles = makeStyles({\n  blockUi: {\n    minHeight: '100vh'\n  }\n});\n\nconst LoginContainer = ({\n  history,\n  signInLoading,\n  signin\n}) => {\n  const initialValues = {\n    email: '',\n    password: ''\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('invalid email').required('username is required'),\n    password: Yup.string().required('password is required')\n  });\n\n  const loginButtonHandler = loginCred => {\n    signin(loginCred).then(() => {\n      history.push('/');\n    });\n  };\n\n  const classes = useStyles();\n  return React.createElement(BlockUi, {\n    className: classes.blockUi,\n    tag: \"div\",\n    blocking: signInLoading,\n    loader: React.createElement(Loader, {\n      active: true,\n      type: \"line-scale-party\",\n      color: \"#3f51b5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }),\n    renderChildren: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Login, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    loginButtonHandler: loginButtonHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n};\n\nLoginContainer.propTypes = {\n  history: PropTypes.instanceOf(Object).isRequired,\n  signin: PropTypes.func,\n  signInLoading: PropTypes.bool\n};\nLoginContainer.defaultProps = {\n  signin: noop,\n  signInLoading: false\n};\n\nconst mapStateToProps = state => ({\n  signInLoading: state.auth.signInLoading,\n  user: state.auth.user\n});\n\nconst matchDispatchToProps = dispatch => ({\n  signin: loginCred => dispatch(signin(loginCred))\n});\n\nexport default connect(mapStateToProps, matchDispatchToProps)(withRouter(LoginContainer));","map":{"version":3,"sources":["D:/REACT JS/React Upforce/daily-todo-fb-final/src/modules/Login/LoginContainer.js"],"names":["React","PropTypes","connect","withRouter","Yup","makeStyles","BlockUi","Loader","signin","noop","Login","useStyles","blockUi","minHeight","LoginContainer","history","signInLoading","initialValues","email","password","validationSchema","object","shape","string","required","loginButtonHandler","loginCred","then","push","classes","propTypes","instanceOf","Object","isRequired","func","bool","defaultProps","mapStateToProps","state","auth","user","matchDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/* eslint-disable no-shadow */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport BlockUi from 'react-block-ui';\nimport 'react-block-ui/style.css';\nimport { Loader } from 'react-loaders';\nimport 'loaders.css/loaders.min.css';\n\nimport { signin } from '../../redux/authActions';\nimport { noop } from '../../utils';\n\nimport Login from './Login';\n\nconst useStyles = makeStyles({\n  blockUi: {\n    minHeight: '100vh',\n  },\n});\n\nconst LoginContainer = ({\n  history,\n  signInLoading,\n  signin,\n}) => {\n  const initialValues = {\n    email: '',\n    password: '',\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup\n      .string()\n      .email('invalid email')\n      .required('username is required'),\n    password: Yup\n      .string()\n      .required('password is required'),\n  });\n\n  const loginButtonHandler = loginCred => {\n    signin(loginCred).then(() => {\n      history.push('/');\n    });\n  };\n\n  const classes = useStyles();\n  return (\n    <BlockUi\n      className={classes.blockUi}\n      tag=\"div\"\n      blocking={signInLoading}\n      loader={<Loader active type=\"line-scale-party\" color=\"#3f51b5\" />}\n      renderChildren={false}\n    >\n      <Login\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        loginButtonHandler={loginButtonHandler}\n      />\n    </BlockUi>\n  );\n};\n\nLoginContainer.propTypes = {\n  history: PropTypes.instanceOf(Object).isRequired,\n  signin: PropTypes.func,\n  signInLoading: PropTypes.bool,\n};\n\nLoginContainer.defaultProps = {\n  signin: noop,\n  signInLoading: false,\n};\n\nconst mapStateToProps = state => ({\n  signInLoading: state.auth.signInLoading,\n  user: state.auth.user,\n});\n\nconst matchDispatchToProps = dispatch => ({\n  signin: loginCred => dispatch(signin(loginCred)),\n});\n\nexport default connect(\n  mapStateToProps,\n  matchDispatchToProps,\n)(withRouter(LoginContainer));\n"]},"metadata":{},"sourceType":"module"}