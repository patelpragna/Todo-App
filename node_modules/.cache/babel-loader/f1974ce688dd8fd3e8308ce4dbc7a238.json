{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT JS\\\\React Upforce\\\\daily-todo-fb-final\\\\src\\\\modules\\\\Signup\\\\Signup.js\";\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport PropTypes from 'prop-types';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Grid from '@material-ui/core/Grid';\nimport { noop } from '../../utils';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nfunction Signup({\n  signupButtonHandler,\n  validationSchema,\n  initialValues\n}) {\n  const classes = useStyles();\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(LockOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(Formik, {\n    validateOnChange: true,\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: data => {\n      signupButtonHandler(data);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, ({\n    errors,\n    touched\n  }) => React.createElement(Form, {\n    className: classes.form,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"email\",\n    type: \"input\",\n    variant: \"outlined\",\n    label: \"Email\",\n    fullWidth: true,\n    autoComplete: \"email\",\n    error: touched.email && Boolean(errors.email),\n    helperText: errors.email ? errors.email : '',\n    as: TextField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    variant: \"outlined\",\n    label: \"Password\",\n    fullWidth: true,\n    autoComplete: \"password\",\n    error: touched.password && Boolean(errors.password),\n    helperText: errors.password ? errors.password : '',\n    as: TextField,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Create Account\"), React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Link, {\n    href: \"/login\",\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Already have an account? Sign in\")))))));\n}\n\nSignup.propTypes = {\n  signupButtonHandler: PropTypes.func,\n  validationSchema: PropTypes.instanceOf(Object),\n  initialValues: PropTypes.instanceOf(Object)\n};\nSignup.defaultProps = {\n  signupButtonHandler: noop,\n  validationSchema: {},\n  initialValues: {}\n};\nexport default Signup;","map":{"version":3,"sources":["D:/REACT JS/React Upforce/daily-todo-fb-final/src/modules/Signup/Signup.js"],"names":["React","Formik","Form","Field","PropTypes","Link","makeStyles","TextField","Button","Typography","Container","Avatar","LockOutlinedIcon","Grid","noop","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Signup","signupButtonHandler","validationSchema","initialValues","classes","data","errors","touched","email","Boolean","password","propTypes","func","instanceOf","Object","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,QAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,IAAT,QAAqB,aAArB;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAACU,KAAK,KAAK;AACrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADN;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,aAAa,EAAE,QAHV;AAILC,IAAAA,UAAU,EAAE;AAJP,GAD8B;AAOrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,CADF;AAENM,IAAAA,eAAe,EAAET,KAAK,CAACU,OAAN,CAAcC,SAAd,CAAwBC;AAFnC,GAP6B;AAWrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJZ,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFP,GAX+B;AAerCY,EAAAA,MAAM,EAAE;AACNP,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADF;AAf6B,CAAL,CAAN,CAA5B;;AAoBA,SAASa,MAAT,CAAgB;AACdC,EAAAA,mBADc;AAEdC,EAAAA,gBAFc;AAGdC,EAAAA;AAHc,CAAhB,EAIG;AACD,QAAMC,OAAO,GAAGrB,SAAS,EAAzB;AAEA,SACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,QAAQ,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEqB,OAAO,CAACnB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEmB,OAAO,CAACb,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAOE,oBAAC,MAAD;AACE,IAAA,gBAAgB,MADlB;AAEE,IAAA,aAAa,EAAEY,aAFjB;AAGE,IAAA,gBAAgB,EAAED,gBAHpB;AAIE,IAAA,QAAQ,EAAEG,IAAI,IAAI;AAChBJ,MAAAA,mBAAmB,CAACI,IAAD,CAAnB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,KACC,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEH,OAAO,CAACP,IAAzB;AAA+B,IAAA,UAAU,MAAzC;AAA0C,IAAA,YAAY,EAAC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,SAAS,MALX;AAME,IAAA,YAAY,EAAC,OANf;AAOE,IAAA,KAAK,EAAEU,OAAO,CAACC,KAAR,IAAiBC,OAAO,CAACH,MAAM,CAACE,KAAR,CAPjC;AAQE,IAAA,UAAU,EAAEF,MAAM,CAACE,KAAP,GAAeF,MAAM,CAACE,KAAtB,GAA8B,EAR5C;AASE,IAAA,EAAE,EAAEjC,SATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAcE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,SAAS,MALX;AAME,IAAA,YAAY,EAAC,UANf;AAOE,IAAA,KAAK,EAAEgC,OAAO,CAACG,QAAR,IAAoBD,OAAO,CAACH,MAAM,CAACI,QAAR,CAPpC;AAQE,IAAA,UAAU,EAAEJ,MAAM,CAACI,QAAP,GAAkBJ,MAAM,CAACI,QAAzB,GAAoC,EARlD;AASE,IAAA,EAAE,EAAEnC,SATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdF,CADF,EA6BE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,SAAS,EAAE6B,OAAO,CAACL,MALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA7BF,EAsCE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,OAAO,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,CADF,CAtCF,CATJ,CAPF,CADF,CADF;AAqED;;AAEDC,MAAM,CAACW,SAAP,GAAmB;AACjBV,EAAAA,mBAAmB,EAAE7B,SAAS,CAACwC,IADd;AAEjBV,EAAAA,gBAAgB,EAAE9B,SAAS,CAACyC,UAAV,CAAqBC,MAArB,CAFD;AAGjBX,EAAAA,aAAa,EAAE/B,SAAS,CAACyC,UAAV,CAAqBC,MAArB;AAHE,CAAnB;AAMAd,MAAM,CAACe,YAAP,GAAsB;AACpBd,EAAAA,mBAAmB,EAAEnB,IADD;AAEpBoB,EAAAA,gBAAgB,EAAE,EAFE;AAGpBC,EAAAA,aAAa,EAAE;AAHK,CAAtB;AAMA,eAAeH,MAAf","sourcesContent":["import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport PropTypes from 'prop-types';\n\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Grid from '@material-ui/core/Grid';\nimport { noop } from '../../utils';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Signup({\n  signupButtonHandler,\n  validationSchema,\n  initialValues,\n}) {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign Up\n        </Typography>\n        <Formik\n          validateOnChange\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={data => {\n            signupButtonHandler(data);\n          }}\n        >\n          {({ errors, touched }) => (\n            <Form className={classes.form} noValidate autoComplete=\"off\">\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <Field\n                    name=\"email\"\n                    type=\"input\"\n                    variant=\"outlined\"\n                    label=\"Email\"\n                    fullWidth\n                    autoComplete=\"email\"\n                    error={touched.email && Boolean(errors.email)}\n                    helperText={errors.email ? errors.email : ''}\n                    as={TextField}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    name=\"password\"\n                    type=\"password\"\n                    variant=\"outlined\"\n                    label=\"Password\"\n                    fullWidth\n                    autoComplete=\"password\"\n                    error={touched.password && Boolean(errors.password)}\n                    helperText={errors.password ? errors.password : ''}\n                    as={TextField}\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n              >\n                Create Account\n              </Button>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link href=\"/login\" variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                </Grid>\n              </Grid>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    </Container>\n  );\n}\n\nSignup.propTypes = {\n  signupButtonHandler: PropTypes.func,\n  validationSchema: PropTypes.instanceOf(Object),\n  initialValues: PropTypes.instanceOf(Object),\n};\n\nSignup.defaultProps = {\n  signupButtonHandler: noop,\n  validationSchema: {},\n  initialValues: {},\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}